import qupath.lib.objects.classes.PathClass
import qupath.ext.stardist.StarDist2D

// Define the absolute path to the StarDist model
def modelPath = "/Users/maxencepelloux/documents/QU_PATH_PROJECTS/classifiers/he_heavy_augment.pb"

// Check if the model exists
def modelFile = new File(modelPath)
if (!modelFile.exists()) {
    print "Error: Model file not found at " + modelPath
    return
}

// Configure StarDist2D model with explicit normalization settings
def stardist = StarDist2D.builder(modelPath)
    .threshold(0.25)              // Detection threshold
    .pixelSize(0.23)             // Defines pixel size
    .cellExpansion(0.0)          // No expansion beyond nucleus
    .measureShape()              // Include shape measurements
    .measureIntensity()          // Measure intensity features
    .classify(PathClass.fromString("Nucleus")) // Corrected classification method
    .preprocess(                 // Apply normalization
        StarDist2D.imageNormalizationBuilder()
            .maxDimension(4096)  // Downsample large images if needed
            .percentiles(0.2, 99.8) // Normalize intensity within these percentiles
            .build()
    )
    .build()

// Get the currently opened image
def imageData = getCurrentImageData()
if (imageData == null) {
    print "Error: No image is currently open."
    return
}

def hierarchy = imageData.getHierarchy()
def annotations = hierarchy.getAnnotationObjects() // Get existing annotations

// If no annotations exist, create a full image annotation
if (annotations.isEmpty()) {
    print "No annotations found. Creating full image annotation..."
    createFullImageAnnotation(true)
    annotations = hierarchy.getAnnotationObjects() // Get the newly created annotation
}

print "Running StarDist detection on the current image..."

try {
    // Run StarDist detection on annotations
    stardist.detectObjects(imageData, annotations).each { detection ->
        hierarchy.addObject(detection, true)
    }

    // Save results
    fireHierarchyUpdate()
    print "Completed detection for the current image."
} catch (Exception e) {
    print "Error during detection: " + e.getMessage()
}

print "StarDist nucleus detection completed for the current image!"
